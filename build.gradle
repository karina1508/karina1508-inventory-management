plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'maven'
    id 'com.palantir.docker' version '0.22.1'

}
apply plugin: "maven"

group 'com.ol.im'
version = '1.0'
sourceCompatibility = '1.8'

/*
//sourceCompatibility = 1.8
*/

/*ext {
    set('springCloudVersion', 'Greenwich.SR1')
}*/


configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
docker {
    name "${project.name}"
    dockerfile file('Dockerfile')
    copySpec.from(jar).rename (".*", "app.jar")
    buildArgs(['JAR_FILE':"app.jar"])
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation('io.springfox:springfox-swagger2:2.7.0') {exclude module: 'mapstruct'}
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    //compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.4.4'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation 'junit:junit:4.12'
    implementation 'junit:junit:4.12'
}

test {
    useJUnitPlatform()
}

